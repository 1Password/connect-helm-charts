{{- if .Values.connect.create }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.connect.applicationName }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: connect
    {{- include "onepassword-connect.labels" . | nindent 4 }}
  {{- with .Values.connect.labels }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.connect.annotations }}
  annotations:
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.connect.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.connect.applicationName }}
  template:
    metadata:
      labels:
        app: {{ .Values.connect.applicationName }}
        version: "{{ tpl .Values.connect.version . }}"
        app.kubernetes.io/component: connect
      {{- with .Values.connect.podLabels }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.connect.podAnnotations }}
      annotations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
{{- with .Values.connect.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
      volumes:
        - name: {{ .Values.connect.dataVolume.name }}
          {{ .Values.connect.dataVolume.type }}: {{- toYaml .Values.connect.dataVolume.values | nindent 12 }}
        - name: credentials
          secret:
            secretName: {{ .Values.connect.credentialsName }}
        {{- if .Values.connect.tls.enabled }}
        - name: tls-cert
          secret:
            secretName: {{ .Values.connect.tls.secret }}
        {{- end }}
      tolerations:
{{ toYaml .Values.connect.tolerations | indent 8 }}
      containers:
        - name: {{ .Values.connect.api.name }}
          image: {{ .Values.connect.api.imageRepository }}:{{ tpl .Values.connect.version . }}
          imagePullPolicy: {{ .Values.connect.imagePullPolicy }}
          securityContext:
            runAsUser: 999
            runAsGroup: 999
            allowPrivilegeEscalation: false
          resources:
            {{- toYaml .Values.connect.api.resources | nindent 12 }}
          env:
            - name: OP_SESSION
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.connect.credentialsName }}
                  key: {{ .Values.connect.credentialsKey }}
            - name: OP_BUS_PORT
              value: "11220"
            - name: OP_BUS_PEERS
              value: localhost:11221
            {{- if .Values.connect.tls.enabled }}
            - name: OP_TLS_CERT_FILE
              value: /home/opuser/.op/certs/tls.crt
            - name: OP_TLS_KEY_FILE
              value: /home/opuser/.op/certs/tls.key
            - name: OP_HTTPS_PORT
              value: "{{ .Values.connect.api.httpsPort }}"
            {{- else }}
            - name: OP_HTTP_PORT
              value: "{{ .Values.connect.api.httpPort }}"
            {{- end }}
            - name: OP_LOG_LEVEL
              value: "{{ .Values.connect.api.logLevel }}"
            {{- include "onepassword-connect.profilerConfig" . | indent 12 -}}
          {{- if .Values.connect.probes.readiness }}
          readinessProbe:
            httpGet:
              path: /health
              scheme: {{ if .Values.connect.tls.enabled }}HTTPS{{ else }}HTTP{{end}}
              port: {{ include "onepassword-connect.apiPort" . }}
            initialDelaySeconds: 15
          {{ end }}
          {{- if .Values.connect.probes.liveness }}
          livenessProbe:
            httpGet:
              path: /heartbeat
              scheme: {{ if .Values.connect.tls.enabled }}HTTPS{{ else }}HTTP{{end}}
              port: {{ include "onepassword-connect.apiPort" . }}
            failureThreshold: 3
            periodSeconds: 30
            initialDelaySeconds: 15
          {{ end }}
          volumeMounts:
            - mountPath: /home/opuser/.op/data
              name: {{ .Values.connect.dataVolume.name }}
            {{- if .Values.connect.tls.enabled }}
            - name: tls-cert
              mountPath: /home/opuser/.op/certs
            {{- end }}
        - name: connect-sync
          image: {{ .Values.connect.sync.imageRepository }}:{{ tpl .Values.connect.version . }}
          imagePullPolicy: {{ .Values.connect.imagePullPolicy }}
          securityContext:
            runAsUser: 999
            runAsGroup: 999
            allowPrivilegeEscalation: false
          resources:
            {{- toYaml .Values.connect.sync.resources | nindent 12 }}
          env:
            - name: OP_HTTP_PORT
              value: "{{ .Values.connect.sync.httpPort }}"
            - name: OP_SESSION
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.connect.credentialsName }}
                  key: {{ .Values.connect.credentialsKey }}
            - name: OP_BUS_PORT
              value: "11221"
            - name: OP_BUS_PEERS
              value: localhost:11220
            - name: OP_LOG_LEVEL
              value: "{{ .Values.connect.sync.logLevel }}"
            {{- include "onepassword-connect.profilerConfig" . | indent 12 }}
          {{- if .Values.connect.probes.readiness }}
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.connect.sync.httpPort }}
            initialDelaySeconds: 15
          {{ end }}
          {{- if .Values.connect.probes.liveness }}
          livenessProbe:
            httpGet:
              path: /heartbeat
              port: {{ .Values.connect.sync.httpPort }}
              scheme: HTTP
            failureThreshold: 3
            periodSeconds: 30
            initialDelaySeconds: 15
          {{ end }}
          volumeMounts:
            - mountPath: /home/opuser/.op/data
              name: {{ .Values.connect.dataVolume.name }}
        {{- if .Values.connect.profiler.enabled }}
        - name: profiler-data
          image: alpine
          command: [ 'sleep', 'infinity' ]
          volumeMounts:
            - name: {{ .Values.connect.dataVolume.name }}
              mountPath: /data
              subPath: profiler
        {{- end }}
{{- end }}
